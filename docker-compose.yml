version: '3'

services:
  server:
    container_name: server
    restart: unless-stopped
    build: ./server
    networks:
      - local
    ports:
      - '5000:5000'
    env_file:
      - '.env'
    links:
      - db
      - redis
    volumes:
      - './server/src:/usr/src/server/src'

  db:
    container_name: pg_db
    image: postgres
    restart: unless-stopped
    networks:
      - local
    ports:
      - '5432:5432'
    env_file:
      - '.env'

  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
      args:
        - REACT_APP_API_BASE_URL
        - REACT_APP_SOCKET_BASE_URL
        - REACT_APP_CLIENT_URL
    networks:
      - local
    ports:
      - '3000:3000'
    env_file:
      - '.env'
    volumes:
      - './frontend/src:/usr/src/frontend/src'

  redis:
    image: "redis:alpine"
    command: redis-server
    networks:
      - local
    ports:
      - '6379:6379'
    environment:
      - REDIS_REPLICATION_MODE=master

  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: production_nginx
    depends_on:
      - db
      - redis
      - frontend
      - server
    networks:
      - local
      - public
    links:
      - server
      - frontend
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./${NGINX_CONF_FILE}:/etc/nginx/nginx.conf

#### GRAYLOG SERVICES ####
  mongodb:
    image: "mongo:4.2"
    volumes:
      - "mongodb_data:/data/db"
    restart: "on-failure"
    networks:
      - local

  elasticsearch:
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      http.host: "0.0.0.0"
      action.auto_create_index: "false"
    image: "docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2"
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - "es_data:/usr/share/elasticsearch/data"
    restart: "on-failure"
    networks:
      - local

  graylog:
    image: "graylog/graylog:4.2"
    depends_on:
      - elasticsearch
      - mongodb
    entrypoint: "/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2}
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    networks:
      - local
    ports:
      - "9000:9000/tcp"   # Server API
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    restart: "on-failure"
    healthcheck:
      test: "curl localhost:9000"

### GRAYLOG VOLUMES ###
volumes:
  mongodb_data:
  es_data:
  graylog_data:
  graylog_journal:

networks:
  local:
    driver: bridge
  public:
    driver: bridge
